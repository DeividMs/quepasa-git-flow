{
  "name": "[atualizado] - QuepasaToChatwoot",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.participant}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "name": "Has Participant ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        980,
        720
      ],
      "id": "89a3b15c-9e3d-4997-8286-7d5d43e5ac9b"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "participant.chatwoot",
              "value": "={{$json}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Participant Contact",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1780,
        540
      ],
      "id": "0aa9dca3-9325-44c8-9f89-1661b2f2575e"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.conversation.status}}",
              "operation": "notEqual",
              "value2": "open"
            }
          ]
        }
      },
      "name": "Open ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6420,
        1320
      ],
      "id": "7bee0e29-8e40-4f7c-9c35-2d0c2732c65c"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json[\"extra\"][\"cwhost\"]}}/api/v1/accounts/{{$json[\"extra\"][\"account\"]}}/conversations",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            },
            {
              "name": "inbox_id",
              "value": "={{$json[\"extra\"][\"inbox\"]}}"
            },
            {
              "name": "contact_id",
              "value": "={{$json.chat.chatwoot.id}}"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json[\"extra\"][\"atoken\"]}}"
            }
          ]
        }
      },
      "name": "Create a Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        5720,
        1100
      ],
      "id": "1500efb8-068c-4dc4-b962-5cbc200de3c1",
      "notes": "Important to use \"source_id\" to respond messages"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.id",
              "value": "={{$json.id}}"
            },
            {
              "name": "conversation.status",
              "value": "={{$json.status}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5960,
        1100
      ],
      "id": "31b288c7-31e2-4abe-a32a-97006d582177"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json[\"extra\"][\"cwhost\"]}}/api/v1/accounts/{{$json[\"extra\"][\"account\"]}}/conversations/{{$json[\"conversation\"][\"id\"]}}/toggle_status",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json[\"extra\"][\"atoken\"]}}"
            }
          ]
        }
      },
      "name": "Open a Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        6680,
        1100
      ],
      "id": "f51dd634-d72e-4036-a5a4-cfdf36f20ec3"
    },
    {
      "parameters": {
        "url": "={{$json.cwhost}}/api/v1/accounts/{{$json.account}}/contacts/{{$json.contactid}}/conversations",
        "allowUnauthorizedCerts": true,
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json.utoken}}"
            }
          ]
        },
        "queryParametersUi": {
          "parameter": [
            {}
          ]
        }
      },
      "name": "Get Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        3740,
        1600
      ],
      "id": "a5ed37d2-0913-40ae-a4c0-bc68db9c0881",
      "retryOnFail": false,
      "executeOnce": true,
      "notes": "Missing filter by:\nContact Id\nInbox Id\nStatus = open | pending"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"chat\"][\"id\"].contains(\"@broadcast\") ?? true}}",
              "operation": "notEqual",
              "value2": true
            }
          ]
        }
      },
      "name": "Not Broadcast ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -3920,
        1320
      ],
      "id": "1fc23f48-fcc6-464c-baa7-16022cd4b29b"
    },
    {
      "parameters": {
        "mode": "multiplex"
      },
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        3920,
        1500
      ],
      "id": "af4108c2-7c61-4e72-ab67-72dfac7620bd"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "to-chatwoot",
        "options": {}
      },
      "id": "ab614077-2cd3-4382-a6e3-408a69f2c08f",
      "name": "Webhook Chatwoot",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -4140,
        1320
      ],
      "webhookId": "7adee438-8aad-49d7-ac5f-2ad576a1f6d1"
    },
    {
      "parameters": {
        "baseUrl": "={{$json[\"extra\"][\"cwhost\"]}}",
        "sourceId": "={{$json[\"participant\"][\"hex\"]}}",
        "name": "={{$json[\"participant\"][\"title\"]}}",
        "inboxId": "={{$json[\"extra\"][\"inbox\"]}}",
        "phoneNumber": "={{$json[\"participant\"][\"phone\"]}}",
        "operation": "publicContactCreate",
        "inboxIdentifier": "={{$json[\"extra\"][\"identifier\"]}}"
      },
      "id": "3e89cf5c-be8c-46fc-a01d-734983db27da",
      "name": "GetAndCreate Participant",
      "type": "n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        1300,
        560
      ],
      "executeOnce": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "8d544ada-86da-4748-86f8-8e5981bb7b4d",
      "name": "Broadcast Message",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -3660,
        1740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.conversation?.id}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "name": "Should Create a New Conversation Thread ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5220,
        1300
      ],
      "alwaysOutputData": false,
      "id": "734a4a1f-efe5-45d5-826a-e6f51f9d3802"
    },
    {
      "parameters": {
        "content": "## Follow to Chatwoot",
        "height": 262.50469912086913,
        "width": 251.48817318430855
      },
      "id": "07fa097b-108f-4179-a6ef-c2408927c618",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        8020,
        1280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.payload.content ?? '' }}",
              "operation": "startsWith",
              "value2": "/invite"
            }
          ]
        }
      },
      "id": "9cbfeeb7-da8c-4167-8786-ca845699e2b9",
      "name": "If Invite Command",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        8600,
        1360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.fromme == true}}"
            }
          ]
        }
      },
      "id": "f7298663-f79d-4731-970e-865ad54c0a3d",
      "name": "Should Send Greetings ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5740,
        760
      ]
    },
    {
      "parameters": {
        "workflowId": "28"
      },
      "id": "69f34077-5ec5-410c-967e-c8184b312356",
      "name": "Throw To Greetings Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        6200,
        760
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "25921615-051b-4b86-ba91-1298d67bcedd",
      "name": "Wait For Create a Conversation",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        5980,
        760
      ]
    },
    {
      "parameters": {
        "workflowId": "27"
      },
      "id": "3baa7981-73bf-4abc-bdf4-08f48e7dbda3",
      "name": "Throw To Quepasa Chat Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        8920,
        1040
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Getting and Filtering Conversations\n",
        "height": 522.3007669591103,
        "width": 1625.2969708820842
      },
      "id": "cc89c240-39a8-4f42-b4cc-a61fc813023d",
      "name": "Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3200,
        1380
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "cwhost",
              "value": "={{$json[\"extra\"][\"cwhost\"]}}"
            },
            {
              "name": "account",
              "value": "={{$json[\"extra\"][\"account\"]}}"
            },
            {
              "name": "inbox",
              "value": "={{$json[\"extra\"][\"inbox\"]}}"
            },
            {
              "name": "utoken",
              "value": "={{$json[\"extra\"][\"utoken\"]}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chat.id}}"
            },
            {
              "name": "contactid",
              "value": "={{$json.chat.chatwoot.id}}"
            }
          ]
        },
        "options": {}
      },
      "id": "1f983341-d2c8-4bc0-8e42-d268a5f1eeb4",
      "name": "Set Filter Conversation Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3280,
        1480
      ]
    },
    {
      "parameters": {
        "jsCode": "const validStatus = [\"pending\", \"snoozed\", \"open\"];\nfunction Filters(conversation, inbox){\n  if(!conversation) return false;\n  if(inbox){\n    if(conversation.inbox_id != inbox)\n      return false;\n  }\n  return validStatus.includes(conversation.status);\n}\n\n\nfor (const item of $input.all()){\n  if(item.json.payload){\n\n      // applying filters\n      const conversations = item.json.payload.filter((e) => Filters(e, item.json.inbox));      \n      item.json.payload = conversations?.shift();\n  } \n}\n\nreturn $input.all();"
      },
      "id": "af1a603f-41e3-4c91-8cee-0c42cb1b54a2",
      "name": "Filter Open|Pend|Snooze",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        4120,
        1500
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "c703c659-77e2-4943-a3a6-05465ee93a9e",
      "name": "Follow To Chat Contact Create",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -2160,
        1560
      ],
      "notesInFlow": true,
      "notes": "not need to be Multplex, only 1 first. But its bugged !!!"
    },
    {
      "parameters": {
        "baseUrl": "={{$json[\"extra\"][\"cwhost\"]}}",
        "accessToken": "={{$json[\"extra\"][\"utoken\"]}}",
        "resource": "contact",
        "accountId": "={{$json[\"extra\"][\"account\"]}}",
        "sourceId": "={{$json[\"chat\"][\"hex\"]}}",
        "operation": "contactCreate",
        "contactIdentifier": "={{$json[\"chat\"][\"id\"]}}",
        "name": "={{$json[\"chat\"][\"title\"]}}"
      },
      "id": "e8620d7e-e24d-4052-b84d-90647354db09",
      "name": "Create Chat Contact",
      "type": "n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        -1760,
        1740
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Group Participant Contact\n",
        "height": 519.0878188679243,
        "width": 1758.1722428032342
      },
      "id": "ab31c55c-8872-4f33-b583-4f6fc72f742d",
      "name": "Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "options": {}
      },
      "name": "Clearing Participant",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1780,
        740
      ],
      "id": "9eb90ee1-2e63-417c-8615-dffa8cdda1f4"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "chat",
              "value": "={{$json.chat}}"
            },
            {
              "name": "participant",
              "value": "={{$json.participant}}"
            }
          ]
        },
        "options": {}
      },
      "id": "97e59ce1-23c7-4b09-aa2b-7b3a3fbb37d5",
      "name": "Clearing Payload For Contacts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -3360,
        1360
      ]
    },
    {
      "parameters": {
        "jsCode": "function a2hex(str) {\n  var arr = [];\n  for (var i = 0, l = str.length; i < l; i ++) {\n    var hex = Number(str.charCodeAt(i)).toString(16);\n    arr.push(hex);\n  }\n  return arr.join('');\n}\n\nfor (const item of $input.all()) {\n  let body = item.json;\n  if(body){\n    \n    // Covering participant id\n    if(body.participant){\n\n      if(!body.participant.id || body.participant.id.length == 0)\n      {\n        delete body.participant;\n      } \n      else {\n        body.participant.phone = \"+\" + body.participant.id.split('@').shift();\n        body.participant.hex = a2hex(body.participant.id);\n      }\n    }\n\n    // Covering chat id\n    if(body.chat.id){\n      if(!body.chat.id.endsWith('@g.us')){\n        body.chat.phone = \"+\" + body.chat.id.split('@').shift();\n      } else {\n        // adding contact suffix\n        if(body.chat.title){\n          if(!body.chat.title.endsWith('(GROUP)')) {\n            body.chat.title = body.chat.title + ' (GROUP)'\n          }\n        } else {\n          body.chat.title = 'UNKNOWN (GROUP)'\n        }\n      }\n      body.chat.hex = a2hex(body.chat.id);\n    }\n  }\n}\nreturn $input.all();"
      },
      "id": "7364595f-44fd-4db3-aa2f-4c28a278be29",
      "name": "Cover Ids & Set Phone",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -3140,
        1360
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "participant",
              "value": "={{$json.participant}}"
            }
          ]
        },
        "options": {}
      },
      "id": "9c9c09d0-622c-4cc5-addb-9425648f5652",
      "name": "Set Participant Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        780,
        720
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.body.extra}}"
            },
            {
              "name": "chat",
              "value": "={{$json.body.chat}}"
            },
            {
              "name": "participant",
              "value": "={{$json.body.participant}}"
            },
            {
              "name": "id",
              "value": "={{$json.body.id}}"
            },
            {
              "name": "timestamp",
              "value": "={{$json.body.timestamp}}"
            },
            {
              "name": "text",
              "value": "={{$json.body.text}}"
            },
            {
              "name": "inreply",
              "value": "={{$json.body.inreply}}"
            },
            {
              "name": "attachment",
              "value": "={{$json.body.attachment}}"
            }
          ],
          "number": [
            {
              "name": "type",
              "value": "={{$json.body.type}}"
            }
          ],
          "boolean": [
            {
              "name": "fromme",
              "value": "={{$json.body.fromme}}"
            }
          ]
        },
        "options": {}
      },
      "id": "8be40cdc-4ffe-4e86-9563-3a5d5aeeb01d",
      "name": "Clearing Payload For Workflow",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -3600,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.error}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "2cb0e5de-72bf-4b5b-973c-114a2def6f54",
      "name": "If Get Participant Sucess ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1500,
        560
      ]
    },
    {
      "parameters": {},
      "id": "d6f96aba-7db7-405f-8252-12c85f51e43e",
      "name": "Deliver Participant Contact Payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2240,
        640
      ]
    },
    {
      "parameters": {
        "errorMessage": "chat not processed "
      },
      "id": "5d7665bd-1ca8-47c3-9811-451d22caba8d",
      "name": "Stop And Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        120,
        1420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload?.id}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "46b0a5e9-a642-43ee-a85c-a28b1ce0f34c",
      "name": "If Chat Contact Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1960,
        1560
      ]
    },
    {
      "parameters": {
        "content": "## Chat Contact\n",
        "height": 745.1581608776635,
        "width": 2436.7449011708095
      },
      "id": "e557b3c7-5f96-46a1-9378-e3f5ab25997b",
      "name": "Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2860,
        1360
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "e9b4acf6-d0b3-44d9-a881-02c957df9fcf",
      "name": "Parameters + Contacts1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -260,
        1260
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.participant ?? undefined}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "dd4dd89f-ec78-4c94-b913-0ea9c5288bd3",
      "name": "If Group ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        220,
        1240
      ],
      "notesInFlow": true,
      "notes": "Always false for now"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "b5aec9fd-4c81-4332-a537-249748bbf899",
      "name": "Parameters + Contacts",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2720,
        1220
      ],
      "executeOnce": false
    },
    {
      "parameters": {},
      "id": "774ea93e-7b0c-43d5-be1a-547af084d449",
      "name": "new payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2920,
        1280
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "0e41b306-f452-4c8d-9e20-e4f6302029a1",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        4980,
        1300
      ]
    },
    {
      "parameters": {},
      "id": "18f089e3-9028-4bd4-b04f-83ac0abfb0b6",
      "name": "NoOp - Opening Conversation1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5480,
        1100
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "e79ce80e-41b8-400e-9c67-e10c5999da12",
      "name": "Wait For Create a Conversation1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        6220,
        1260
      ]
    },
    {
      "parameters": {},
      "id": "d4278d45-4cc0-433c-8e08-afb192c229c4",
      "name": "NoOp - Opening Conversation",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        7260,
        1340
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "883bbdb2-80e3-482c-a5e0-373d71353f32",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        7020,
        1280
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{$json.text}}"
            },
            {
              "name": "payload.message_type",
              "value": "={{$json.fromme?\"outgoing\":\"incoming\"}}"
            },
            {
              "name": "payload.echo_id",
              "value": "={{$json.id}}"
            },
            {
              "name": "payload.content_attributes.items.quepasa.msgid",
              "value": "={{ $json.id }}"
            },
            {
              "name": "payload.content_attributes.in_reply_to",
              "value": "={{ $json.inreply }}"
            },
            {
              "name": "payload.attachment",
              "value": "={{$json.attachment}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chat.id}}"
            },
            {
              "name": "conversation",
              "value": "={{$json.conversation}}"
            },
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "hex",
              "value": "={{$json.chat.chatwoot.source_id}}"
            },
            {
              "name": "participant.title",
              "value": "={{$json.participant?.title}}"
            },
            {
              "name": "payload.external_created_at",
              "value": "={{ new Date($json.timestamp).getTime() / 1000 }}"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": "={{ $json.payload?.private ?? false }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Chatwoot Message Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        8100,
        1360
      ],
      "id": "e71bfdba-54bb-4ad8-8cb2-c1a43a1d109c"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.status",
              "value": "={{$json.payload.current_status}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Updated Conversation Status",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        6860,
        1100
      ],
      "id": "cb1e106a-649d-4fb0-9e17-639fa01a1b9b"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content_type",
              "value": "text"
            }
          ]
        },
        "options": {}
      },
      "name": "Payload Constants",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        8360,
        1360
      ],
      "id": "63e01732-61f0-4b0b-9141-c5ede60fe5b4"
    },
    {
      "parameters": {
        "baseUrl": "={{$json[\"extra\"][\"cwhost\"]}}",
        "accessToken": "={{$json[\"extra\"][\"utoken\"]}}",
        "resource": "contact",
        "accountId": "={{$json[\"extra\"][\"account\"]}}",
        "operation": "contactSearch",
        "contactSearchQuery": "={{$json[\"chat\"][\"id\"]}}"
      },
      "id": "376f55ab-aba3-4f37-8d24-1c164812291e",
      "name": "Get Chat Contact",
      "type": "n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        -2540,
        1620
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload",
              "value": "={{$json.payload.shift()}}"
            },
            {
              "name": "meta",
              "value": "={{null}}"
            }
          ]
        },
        "options": {}
      },
      "id": "c309381e-950e-4db3-b842-4bd3c1b7a078",
      "name": "Get Chat Contact Response Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -2360,
        1620
      ]
    },
    {
      "parameters": {
        "workflowId": "33"
      },
      "id": "e24bd4b2-4ef4-4619-8413-b06527e6f3b0",
      "name": "Execute Workflow Post To Chatwoot",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        8920,
        1380
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Call Request ?",
        "height": 354.0653279804751,
        "width": 237.27247076935066
      },
      "id": "12662156-ab12-4605-8229-224bda12ece7",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7480,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.type}}",
              "operation": "equal",
              "value2": 8
            }
          ]
        }
      },
      "id": "a170fa44-78ba-452c-99e6-f601770ce221",
      "name": "If Call Request ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7540,
        1340
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "text",
              "value": "## (Sistema)  📞 O Usuário requisitou uma chamada de voz !|----------------------------------------------------"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "c8de63a4-69fa-4df6-99da-967f423b2a07",
      "name": "Set Text Content For Call Request",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        7760,
        1200
      ]
    },
    {
      "parameters": {
        "workflowId": "8"
      },
      "id": "48688e26-34d2-4d43-a268-efa908ce008c",
      "name": "Throw To WebCallBack Telephony Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        8100,
        1000
      ],
      "executeOnce": true,
      "continueOnFail": true
    },
    {
      "parameters": {},
      "id": "90b258fc-a552-4458-a4c8-86613dd615bc",
      "name": "Deliver Chat Contact Payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -680,
        1420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json?.chat}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "570ea814-bae3-4efd-bd12-7c0e9cd8780e",
      "name": "If Chat Exists ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -100,
        1260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "7bfab41e-4614-49c2-9337-34228b41b6f8",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1600,
        1740
      ]
    },
    {
      "parameters": {
        "amount": "={{ (Math.random() * 5) + 1 }}",
        "unit": "seconds"
      },
      "id": "727eb2a6-3a30-427f-85c9-27d3427404bd",
      "name": "Wait a while (5s)",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        -680,
        1600
      ],
      "webhookId": "3a6935c3-e687-4615-b718-45e5d7314f1f"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "chat.chatwoot.source_id",
              "value": "={{$json.chat.hex}}"
            }
          ],
          "number": [
            {
              "name": "chat.chatwoot.id",
              "value": "={{$json.payload.id}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set SourceId and PayloadId",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -1760,
        1420
      ],
      "id": "3aff4e73-7a0f-4683-9851-95f7dcb72109"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "chat.chatwoot.source_id",
              "value": "={{$json.payload.contact_inbox.source_id}}"
            }
          ],
          "number": [
            {
              "name": "chat.chatwoot.id",
              "value": "={{$json.payload.contact.id}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Created Chat Contact Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -940,
        1720
      ],
      "id": "ff7cea48-9a5a-4803-909d-0fbff4ff52fb"
    },
    {
      "parameters": {
        "errorMessage": "Error on create contact (expected 422)"
      },
      "id": "7ff1cb14-8ff3-4bc2-be65-affed76625db",
      "name": "! Unknown Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -1200,
        1900
      ]
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "attempts",
              "value": "={{ ($json.attempts ?? 0) + 1 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "36353916-d6d6-4d70-8e05-c7a0cb2ab214",
      "name": "Set Increment For Conversations Attempts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3520,
        1480
      ]
    },
    {
      "parameters": {
        "amount": "={{ (Math.random() * 5) + 1 }}",
        "unit": "seconds"
      },
      "id": "524a18a2-c745-46c1-bacb-7d1385eea004",
      "name": "Wait a while (5s) For Conversation",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        4580,
        1680
      ],
      "webhookId": "5ca3e9eb-b9c2-430b-9e75-e74e54bb2e50"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.id",
              "value": "={{$json.payload?.id}}"
            },
            {
              "name": "conversation.status",
              "value": "={{$json.payload?.status}}"
            }
          ]
        },
        "options": {}
      },
      "id": "1ad69481-9080-45db-a93c-e7be7a809e0f",
      "name": "Set Conversation Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        4580,
        1480
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.payload }}",
              "operation": "isNotEmpty"
            }
          ],
          "number": [
            {
              "value1": "={{ $json.attempts ?? 0 }}",
              "operation": "larger",
              "value2": 2
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "d59722e6-0541-4e88-8ad1-008ceaacecc2",
      "name": "If Conversation Found Or Max Attempts Reached ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4340,
        1500
      ]
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "attempts",
              "value": "={{ ($json.attempts ?? 0) + 1 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "485a76f6-8c96-4fab-a740-fafaacd08d5d",
      "name": "Set Increment For Chat Contact Attempt",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -2720,
        1540
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "38e899e8-78ad-476d-b8ad-10084f192a68",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -1220,
        1600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.error ?? \"\" }}",
              "operation": "contains",
              "value2": "could not be processed"
            }
          ],
          "number": [
            {
              "value1": "={{ $json.attempts ?? 0 }}",
              "value2": 2
            }
          ]
        }
      },
      "id": "d428e1f6-484c-4ca2-981a-7a98fe25f217",
      "name": "If Error 422 And Has Attempts Remaning ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1420,
        1800
      ],
      "executeOnce": false
    },
    {
      "parameters": {},
      "id": "d2663a69-3112-426b-8fe0-8e001ef17c9e",
      "name": "Retry To Chat Contact",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -680,
        1880
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Has Participant ?": {
      "main": [
        [
          {
            "node": "GetAndCreate Participant",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Clearing Participant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Participant Contact": {
      "main": [
        [
          {
            "node": "Deliver Participant Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open ?": {
      "main": [
        [
          {
            "node": "Open a Conversation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "NoOp - Opening Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a Conversation": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait For Create a Conversation",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Wait For Create a Conversation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open a Conversation": {
      "main": [
        [
          {
            "node": "Set Updated Conversation Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Conversation": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Not Broadcast ?": {
      "main": [
        [
          {
            "node": "Clearing Payload For Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Broadcast Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Chatwoot": {
      "main": [
        [
          {
            "node": "Not Broadcast ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetAndCreate Participant": {
      "main": [
        [
          {
            "node": "If Get Participant Sucess ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Create a New Conversation Thread ?": {
      "main": [
        [
          {
            "node": "NoOp - Opening Conversation1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait For Create a Conversation1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Open ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Invite Command": {
      "main": [
        [
          {
            "node": "Throw To Quepasa Chat Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow Post To Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Send Greetings ?": {
      "main": [
        [
          {
            "node": "Wait For Create a Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Create a Conversation": {
      "main": [
        [
          {
            "node": "Throw To Greetings Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Filter Conversation Parameters": {
      "main": [
        [
          {
            "node": "Set Increment For Conversations Attempts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow To Chat Contact Create": {
      "main": [
        [
          {
            "node": "If Chat Contact Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Chat Contact": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clearing Participant": {
      "main": [
        [
          {
            "node": "Deliver Participant Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clearing Payload For Contacts": {
      "main": [
        [
          {
            "node": "Cover Ids & Set Phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cover Ids & Set Phone": {
      "main": [
        [
          {
            "node": "Set Increment For Chat Contact Attempt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Participant Payload": {
      "main": [
        [
          {
            "node": "Has Participant ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clearing Payload For Workflow": {
      "main": [
        [
          {
            "node": "Clearing Payload For Contacts",
            "type": "main",
            "index": 0
          },
          {
            "node": "Parameters + Contacts1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Get Participant Sucess ?": {
      "main": [
        [
          {
            "node": "Set Participant Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Chat Contact Exists": {
      "main": [
        [
          {
            "node": "Set SourceId and PayloadId",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Chat Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parameters + Contacts1": {
      "main": [
        [
          {
            "node": "If Chat Exists ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Group ?": {
      "main": [
        [
          {
            "node": "Set Participant Payload",
            "type": "main",
            "index": 0
          },
          {
            "node": "Parameters + Contacts",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "new payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deliver Participant Contact Payload": {
      "main": [
        [
          {
            "node": "Parameters + Contacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parameters + Contacts": {
      "main": [
        [
          {
            "node": "new payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new payload": {
      "main": [
        [
          {
            "node": "Set Filter Conversation Parameters",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Should Create a New Conversation Thread ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp - Opening Conversation1": {
      "main": [
        [
          {
            "node": "Create a Conversation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Should Send Greetings ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Create a Conversation1": {
      "main": [
        [
          {
            "node": "Open ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp - Opening Conversation": {
      "main": [
        [
          {
            "node": "If Call Request ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "NoOp - Opening Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chatwoot Message Payload": {
      "main": [
        [
          {
            "node": "Payload Constants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Updated Conversation Status": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload Constants": {
      "main": [
        [
          {
            "node": "If Invite Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Chat Contact": {
      "main": [
        [
          {
            "node": "Get Chat Contact Response Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Chat Contact Response Payload": {
      "main": [
        [
          {
            "node": "Follow To Chat Contact Create",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If Call Request ?": {
      "main": [
        [
          {
            "node": "Set Text Content For Call Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chatwoot Message Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Text Content For Call Request": {
      "main": [
        [
          {
            "node": "Chatwoot Message Payload",
            "type": "main",
            "index": 0
          },
          {
            "node": "Throw To WebCallBack Telephony Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deliver Chat Contact Payload": {
      "main": [
        [
          {
            "node": "Parameters + Contacts1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If Chat Exists ?": {
      "main": [
        [
          {
            "node": "If Group ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop And Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Set Created Chat Contact Info",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Error 422 And Has Attempts Remaning ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set SourceId and PayloadId": {
      "main": [
        [
          {
            "node": "Deliver Chat Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Created Chat Contact Info": {
      "main": [
        [
          {
            "node": "Deliver Chat Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait a while (5s)": {
      "main": [
        [
          {
            "node": "Retry To Chat Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Increment For Conversations Attempts": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Filter Open|Pend|Snooze",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Conversation Payload": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Wait a while (5s) For Conversation": {
      "main": [
        [
          {
            "node": "Set Increment For Conversations Attempts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Conversation Found Or Max Attempts Reached ?": {
      "main": [
        [
          {
            "node": "Set Conversation Payload",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait a while (5s) For Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Open|Pend|Snooze": {
      "main": [
        [
          {
            "node": "If Conversation Found Or Max Attempts Reached ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Increment For Chat Contact Attempt": {
      "main": [
        [
          {
            "node": "Follow To Chat Contact Create",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Chat Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Wait a while (5s)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Error 422 And Has Attempts Remaning ?": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "! Unknown Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retry To Chat Contact": {
      "main": [
        [
          {
            "node": "Set Increment For Chat Contact Attempt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "1c46b719-53a7-4b5f-a925-8900228363e0",
  "id": "37",
  "meta": {
    "instanceId": "c6c66158402f24d81c43c239d2f5ecc6498fcfa98fa9baaa5595fa1aa1e6cec9"
  },
  "tags": [
    {
      "createdAt": "2023-04-22T19:57:05.341Z",
      "updatedAt": "2023-04-22T19:57:05.341Z",
      "id": "4",
      "name": "codeleaks"
    }
  ]
}