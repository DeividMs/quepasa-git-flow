{
  "name": "QuepasaToChatwootV2",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.participant}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "name": "Has Participant ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        980,
        720
      ],
      "id": "1f012ffb-d198-4b8a-8214-4f11beb1cb94"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "participant.chatwoot",
              "value": "={{$json}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Participant Contact",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1780,
        540
      ],
      "id": "7b485450-2299-4ed7-a020-c2ec8e8f72a7"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.conversation.status}}",
              "operation": "notEqual",
              "value2": "open"
            }
          ]
        }
      },
      "name": "Open ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6420,
        1320
      ],
      "id": "80117d24-e046-4354-b9db-8e8ccacf8295"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json[\"extra\"][\"cwhost\"]}}/api/v1/accounts/{{$json[\"extra\"][\"account\"]}}/conversations",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            },
            {
              "name": "inbox_id",
              "value": "={{$json[\"extra\"][\"inbox\"]}}"
            },
            {
              "name": "contact_id",
              "value": "={{$json.chat.chatwoot.id}}"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json[\"extra\"][\"atoken\"]}}"
            }
          ]
        }
      },
      "name": "Create a Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        5740,
        1100
      ],
      "id": "55504e7c-4800-40a2-87fc-51f382f87553",
      "retryOnFail": true,
      "notes": "Important to use \"source_id\" to respond messages"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.id",
              "value": "={{$json.id}}"
            },
            {
              "name": "conversation.status",
              "value": "={{$json.status}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5960,
        1100
      ],
      "id": "a31b0572-4295-409b-9767-c048629b4cbc"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json[\"extra\"][\"cwhost\"]}}/api/v1/accounts/{{$json[\"extra\"][\"account\"]}}/conversations/{{$json[\"conversation\"][\"id\"]}}/toggle_status",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json[\"extra\"][\"atoken\"]}}"
            }
          ]
        }
      },
      "name": "Open a Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        6640,
        1100
      ],
      "id": "c9341b99-33e8-40eb-b7bd-f04efafa7ffb",
      "retryOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"chat\"][\"id\"].contains(\"@broadcast\") ?? true}}",
              "operation": "notEqual",
              "value2": true
            }
          ]
        }
      },
      "name": "Not Broadcast ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -3820,
        1340
      ],
      "id": "59a518c8-f0a4-4bb0-a5de-623b4d87a81f"
    },
    {
      "parameters": {
        "baseUrl": "={{$json[\"extra\"][\"cwhost\"]}}",
        "sourceId": "={{$json[\"participant\"][\"hex\"]}}",
        "name": "={{$json[\"participant\"][\"title\"]}}",
        "inboxId": "={{$json[\"extra\"][\"inbox\"]}}",
        "phoneNumber": "={{$json[\"participant\"][\"phone\"]}}",
        "email": "={{$json[\"participant\"][\"email\"]}}",
        "operation": "publicContactCreate",
        "inboxIdentifier": "={{$json[\"extra\"][\"identifier\"]}}"
      },
      "id": "cdbeff70-2f58-4d5e-94a1-58db2830116f",
      "name": "GetAndCreate Participant",
      "type": "n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        1300,
        560
      ],
      "executeOnce": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "5f286f42-5a39-493f-a85f-e1f51362a828",
      "name": "Broadcast Message",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -3580,
        1540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.conversation?.id}}",
              "operation": "isEmpty"
            },
            {
              "value1": "={{$json.conversation?.status}}",
              "value2": "resolved"
            }
          ]
        },
        "combineOperation": "any"
      },
      "name": "Should Create a New Conversation Thread ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5280,
        1300
      ],
      "alwaysOutputData": false,
      "id": "22f0bb85-382e-4cf8-8097-29ae33dd976a"
    },
    {
      "parameters": {
        "content": "## Follow to Chatwoot",
        "height": 262.50469912086913,
        "width": 251.48817318430855
      },
      "id": "91098372-1392-40c5-b084-7dfa199e1b13",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        8020,
        1280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.fromme == true}}"
            }
          ]
        }
      },
      "id": "204b9d28-28e4-46db-9a47-b7955202d682",
      "name": "Should Send Greetings ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5740,
        760
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "6e9993b8-d10f-40e2-a96d-1b53aaa12d39",
      "name": "Wait For Create a Conversation",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        5980,
        760
      ]
    },
    {
      "parameters": {
        "content": "## Getting and Filtering Conversations\n",
        "height": 94.51310177757405,
        "width": 1191.1484868200769
      },
      "id": "f9b1eab9-5221-40e2-83b3-adbe2c40f893",
      "name": "Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3200,
        1380
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "cwhost",
              "value": "={{$json[\"extra\"][\"cwhost\"]}}"
            },
            {
              "name": "account",
              "value": "={{$json[\"extra\"][\"account\"]}}"
            },
            {
              "name": "inbox",
              "value": "={{$json[\"extra\"][\"inbox\"]}}"
            },
            {
              "name": "utoken",
              "value": "={{$json[\"extra\"][\"utoken\"]}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chat.id}}"
            },
            {
              "name": "contactid",
              "value": "={{$json.chat.chatwoot.id}}"
            }
          ]
        },
        "options": {}
      },
      "id": "8457b2a5-7c03-4ee4-8891-3a159bd6288e",
      "name": "Set Filter Conversation Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3280,
        1480
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "05ce7209-d0a2-4411-9d60-e6999ee534ba",
      "name": "Follow To Chat Contact Create",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -2160,
        1560
      ],
      "notesInFlow": true,
      "notes": "not need to be Multplex, only 1 first. But its bugged !!!"
    },
    {
      "parameters": {
        "baseUrl": "={{$json[\"extra\"][\"cwhost\"]}}",
        "accessToken": "={{$json[\"extra\"][\"utoken\"]}}",
        "resource": "contact",
        "accountId": "={{$json[\"extra\"][\"account\"]}}",
        "sourceId": "={{$json[\"chat\"][\"hex\"]}}",
        "operation": "contactCreate",
        "contactIdentifier": "={{$json[\"chat\"][\"id\"]}}",
        "name": "={{$json[\"chat\"][\"title\"]}}",
        "phoneNumber": "={{$json[\"chat\"][\"phone\"]}}",
        "email": "={{$json[\"chat\"][\"email\"]}}"
      },
      "id": "71e1ad18-0f39-4ae8-9867-055d95b0c73c",
      "name": "Create Chat Contact",
      "type": "n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        -1780,
        2280
      ],
      "retryOnFail": true,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Group Participant Contact\n",
        "height": 519.0878188679243,
        "width": 1758.1722428032342
      },
      "id": "06c6800b-ee07-4964-8da4-e46e7f23f2fe",
      "name": "Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "options": {}
      },
      "name": "Clearing Participant",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1780,
        740
      ],
      "id": "e24d01ce-1940-4660-90e6-c04a12d83ffc"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "chat",
              "value": "={{$json.chat}}"
            },
            {
              "name": "participant",
              "value": "={{$json.participant}}"
            }
          ]
        },
        "options": {}
      },
      "id": "bf216bf3-30bb-493b-9504-aaf05173aa0e",
      "name": "Clearing Payload For Contacts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -3360,
        1360
      ]
    },
    {
      "parameters": {
        "jsCode": "function a2hex(str) {\n  var arr = [];\n  for (var i = 0, l = str.length; i < l; i ++) {\n    var hex = Number(str.charCodeAt(i)).toString(16);\n    arr.push(hex);\n  }\n  return arr.join('');\n}\n\nfor (const item of $input.all()) {\n  let body = item.json;\n  if(body){\n    \n    // Covering participant id\n    if(body.participant){\n\n      if(!body.participant.id || body.participant.id.length == 0)\n      {\n        delete body.participant;\n      } \n      else {\n        body.participant.phone = \"+\" + body.participant.id.split('@').shift();\n        body.participant.hex = a2hex(body.participant.id);\n      }\n    }\n\n    // Covering chat id\n    if(body.chat.id){\n      if(!body.chat.id.endsWith('@g.us')){\n        body.chat.phone = \"+\" + body.chat.id.split('@').shift();\n      } else {\n        // adding contact suffix\n        if(body.chat.title){\n          if(!body.chat.title.endsWith('(GRUPO)')) {\n            body.chat.title = body.chat.title + ' (GRUPO)'\n          }\n        } else {\n          body.chat.title = 'UNKNOWN (GRUPO)'\n        }\n      }\n      body.chat.hex = a2hex(body.chat.id);\n    }\n  }\n}\nreturn $input.all();"
      },
      "id": "c649756e-8217-4329-82d8-cb4af942bba6",
      "name": "Cover Ids & Set Phone",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -3140,
        1360
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "participant",
              "value": "={{$json.participant}}"
            }
          ]
        },
        "options": {}
      },
      "id": "80bd5467-002c-40ac-b846-b55955480c6e",
      "name": "Set Participant Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        780,
        720
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.body.extra}}"
            },
            {
              "name": "chat",
              "value": "={{$json.body.chat}}"
            },
            {
              "name": "participant",
              "value": "={{$json.body.participant}}"
            },
            {
              "name": "id",
              "value": "={{$json.body.id}}"
            },
            {
              "name": "timestamp",
              "value": "={{$json.body.timestamp}}"
            },
            {
              "name": "text",
              "value": "={{$json.body.text}}"
            },
            {
              "name": "inreply",
              "value": "={{$json.body.inreply}}"
            },
            {
              "name": "attachment",
              "value": "={{$json.body.attachment}}"
            }
          ],
          "number": [
            {
              "name": "type",
              "value": "={{$json.body.type}}"
            }
          ],
          "boolean": [
            {
              "name": "fromme",
              "value": "={{$json.body.fromme}}"
            }
          ]
        },
        "options": {}
      },
      "id": "fe6ace10-b777-40f5-831b-d13b509e45fe",
      "name": "Clearing Payload For Workflow",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -3600,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.error}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "7d82d831-6037-490e-a672-69fd14a4ace7",
      "name": "If Get Participant Sucess ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1500,
        560
      ]
    },
    {
      "parameters": {},
      "id": "20f5883e-ed87-44a3-aba7-039943f51718",
      "name": "Deliver Participant Contact Payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2240,
        640
      ]
    },
    {
      "parameters": {
        "errorMessage": "chat not processed "
      },
      "id": "9a9f6f82-5ce7-47f6-a0f8-b01639efbb6b",
      "name": "Stop And Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        120,
        1420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload?.id}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "3f664465-5b0e-4785-9dce-df3a099a21f5",
      "name": "If Chat Contact Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1940,
        1760
      ]
    },
    {
      "parameters": {
        "content": "## Chat Contact\n",
        "height": 97.62502883910653,
        "width": 2555.8625319114303
      },
      "id": "d125889d-0637-4468-b04c-89b78870ea19",
      "name": "Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2979.11763074062,
        1360
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "02e64706-3bf5-4ef1-871c-f5342a590abb",
      "name": "Parameters + Contacts1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -260,
        1260
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.participant ?? undefined}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "b6fdfe6e-80da-4a7c-bc74-bee0329b0bad",
      "name": "If Group ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        220,
        1240
      ],
      "notesInFlow": true,
      "notes": "Always false for now"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "f4e09f30-88b2-4e8e-9de0-213f8c30f24a",
      "name": "Parameters + Contacts",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2720,
        1220
      ],
      "executeOnce": false
    },
    {
      "parameters": {},
      "id": "0e2f3973-e702-459a-beff-7459a8aa5098",
      "name": "new payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2920,
        1280
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "0eb8087a-5fea-499e-9899-9fddbbe98cac",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        4940,
        1300
      ]
    },
    {
      "parameters": {},
      "id": "21a39c28-7398-4994-912d-cac3e35449f3",
      "name": "NoOp - Opening Conversation1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5480,
        1100
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "224f2f54-55c7-4ced-a94e-0109f7f27c35",
      "name": "Wait For Create a Conversation1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        6220,
        1260
      ]
    },
    {
      "parameters": {},
      "id": "27f160a1-a805-4d9f-9ea3-74edbca2ef07",
      "name": "NoOp - Opening Conversation",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        7260,
        1340
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "7d427cf9-efed-4100-875e-cbeda3109ee7",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        7020,
        1280
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{$json.text}}"
            },
            {
              "name": "payload.message_type",
              "value": "={{$json.fromme?\"outgoing\":\"incoming\"}}"
            },
            {
              "name": "payload.echo_id",
              "value": "={{$json.id}}"
            },
            {
              "name": "payload.content_attributes.items.quepasa.msgid",
              "value": "={{ $json.id }}"
            },
            {
              "name": "payload.content_attributes.in_reply_to",
              "value": "={{ $json.inreply }}"
            },
            {
              "name": "payload.attachment",
              "value": "={{$json.attachment}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chat.id}}"
            },
            {
              "name": "chat_title",
              "value": "={{$json.chat.title}}"
            },
            {
              "name": "conversation",
              "value": "={{$json.conversation}}"
            },
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "hex",
              "value": "={{$json.chat.chatwoot.source_id}}"
            },
            {
              "name": "participant.title",
              "value": "={{$json.participant?.title}}"
            },
            {
              "name": "payload.external_created_at",
              "value": "={{ new Date($json.timestamp).getTime() / 1000 }}"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": "={{ $json.payload?.private ?? false }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Chatwoot Message Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        8100,
        1360
      ],
      "id": "80a397fa-e005-400d-89af-6d9d2eaa00fd"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.status",
              "value": "={{$json.payload.current_status}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Updated Conversation Status",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        6820,
        1100
      ],
      "id": "e55a1290-724d-4c50-806b-62be647d253e"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content_type",
              "value": "text"
            }
          ]
        },
        "options": {}
      },
      "name": "Payload Constants",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        8360,
        1360
      ],
      "id": "93a16b18-73df-4f47-8031-805e827f7e30"
    },
    {
      "parameters": {
        "content": "## Call Request ?",
        "height": 354.0653279804751,
        "width": 237.27247076935066
      },
      "id": "5ca6a9a5-f1ca-41f5-a71a-324b3721669a",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7480,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.type}}",
              "operation": "equal",
              "value2": 8
            }
          ]
        }
      },
      "id": "d66c66f8-3deb-4faf-b412-cf27bf82be9d",
      "name": "If Call Request ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7540,
        1340
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "text",
              "value": "## (Sistema) O Usuário requisitou uma chamada de voz !\n----------------------------------------------------"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "834d617f-73cf-4006-8694-12bea180f8d0",
      "name": "Set Text Content For Call Request",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        7760,
        1200
      ]
    },
    {
      "parameters": {
        "workflowId": "8"
      },
      "id": "441f381f-324b-4d27-9e2c-e72ec3a97837",
      "name": "Throw To WebCallBack Telephony Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        8100,
        1000
      ],
      "executeOnce": true,
      "continueOnFail": true
    },
    {
      "parameters": {},
      "id": "a566f391-853a-4f06-876a-0c658bc845f3",
      "name": "Deliver Chat Contact Payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -680,
        1420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json?.chat}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "933b4bbc-1bf6-4ace-b17a-52ff0bb82f34",
      "name": "If Chat Exists ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -100,
        1260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "f945ab33-f04c-4ebd-8b8a-d250c558d806",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1620,
        2280
      ]
    },
    {
      "parameters": {
        "amount": "={{ (Math.random() * 5) + 1 }}",
        "unit": "seconds"
      },
      "id": "1f47723f-689e-4d66-bb73-b1a2bae2f834",
      "name": "Wait a while (5s)",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        -700,
        2140
      ],
      "webhookId": "94c8f44e-8e77-430b-8cb2-1e8a2ddff8a0"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "chat.chatwoot.source_id",
              "value": "={{$json.chat.hex}}"
            }
          ],
          "number": [
            {
              "name": "chat.chatwoot.id",
              "value": "={{$json.payload.id}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set SourceId and PayloadId",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -1760,
        1420
      ],
      "id": "f976e6ce-fb63-4c05-953e-05a8395540e9"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "chat.chatwoot.source_id",
              "value": "={{$json.payload.contact_inbox.source_id}}"
            }
          ],
          "number": [
            {
              "name": "chat.chatwoot.id",
              "value": "={{$json.payload.contact.id}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Created Chat Contact Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -960,
        2260
      ],
      "id": "0337cdd8-f928-4e1b-a7e8-95f0f15390de"
    },
    {
      "parameters": {
        "errorMessage": "Error on create contact (expected 422)"
      },
      "id": "dc3d062e-e7a9-4774-95c2-d5f773e4fe0a",
      "name": "! Unknown Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -1220,
        2440
      ]
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "attempts",
              "value": "={{ ($json.attempts ?? 0) + 1 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "65d305c4-c987-4ad7-a60c-aacbb596fe93",
      "name": "Set Increment For Conversations Attempts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3520,
        1480
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.id",
              "value": "={{$json.payload?.id}}"
            },
            {
              "name": "conversation.status",
              "value": "={{$json.payload?.status}}"
            }
          ]
        },
        "options": {}
      },
      "id": "df583663-bc02-448b-8092-9ce877eba625",
      "name": "Set Conversation Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        4200,
        1480
      ]
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "attempts",
              "value": "={{ ($json.attempts ?? 0) + 1 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "11d1e1e5-327d-4d55-880b-c58d2a241937",
      "name": "Set Increment For Chat Contact Attempt",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -2860,
        1540
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "355233fc-30b8-4b27-93ea-b5fc134270c9",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -1280,
        2180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.error ?? \"\" }}",
              "operation": "contains",
              "value2": "could not be processed"
            }
          ],
          "number": [
            {
              "value1": "={{ $json.attempts ?? 0 }}",
              "value2": 2
            }
          ]
        }
      },
      "id": "f238b254-d121-4705-a32d-e102b75addee",
      "name": "If Error 422 And Has Attempts Remaning ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1440,
        2340
      ],
      "executeOnce": false
    },
    {
      "parameters": {},
      "id": "536f89aa-abd0-4208-a8ec-d2c1c90f3f49",
      "name": "Retry To Chat Contact",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -700,
        2420
      ]
    },
    {
      "parameters": {},
      "id": "f19de89e-8807-41c4-ad00-288d07e250ad",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -4300,
        1120
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field\n// called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.body = {\n    \"id\": \"9CA1CE14D7BA78277A\", \"timestamp\": \"2022-10-27T21:13:43Z\", \"type\": 5, \"chat\": { \"id\": \"5521967609095@s.whatsapp.net\", \"title\": \"Hugo Deco\" }, \"text\": \"ok\", \"fromme\": false, \"frominternal\": false, \"extra\": { \"account\": \"1\", \"atoken\": \"trBsc8d2eoUH5YxKuGZFNxvE\", \"cwhost\": \"https://chatwoot.sufficit.com.br\", \"identifier\": \"9ZvPUgykri2EwZa7pbNXksbo\", \"inbox\": \"11\", \"qphost\": \"http://127.0.0.1:31000\", \"qptoken\": \"8eb313f2-8a9b-46a0-93ef-541b8f75106a\", \"utoken\": \"WgpaFrGS878Cm5rfjVrY2RkL\", \"n8n_api\": \"n8n_api_acbbbe053d51c12492aacd274641b58369eefba6be2de3fda3186189ca4e05f3c32323c378d39aca\" }\n  }\n}\n\nreturn $input.all();"
      },
      "id": "1401e192-980b-4cc2-8370-70bcaeb6132e",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -4100,
        1120
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "to-chatwoot",
        "options": {}
      },
      "id": "06940133-2eb9-43be-be20-d8888a47b71d",
      "name": "Webhook Chatwoot1",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -4100,
        1340
      ],
      "webhookId": "f0d0e1da-e8cf-4956-8715-dccf5fe3c892"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.payload.content? $json.payload.content : \"\" }}",
              "operation": "startsWith",
              "value2": "/invite"
            },
            {
              "value1": "{{ $json[\"payload\"][\"content\"] }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "d2c7cb34-8769-4003-aa78-1db7e4f30d6e",
      "name": "If Invite Command1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        8600,
        1360
      ]
    },
    {
      "parameters": {},
      "id": "3055cc48-5c27-4319-937a-f5d9937bc8ff",
      "name": "When Called By Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -4120,
        1560
      ]
    },
    {
      "parameters": {
        "jsCode": "return [{\n  payload : {\n    id: $input.first().json.id,\n    name: $input.first().json.name,\n    email: $input.first().json.email,\n    phone_number: $input.first().json.phone_number,\n    identifier: $input.first().json.identifier,\n    thumbnail: $input.first().json.thumbnail,\n    created_at: $input.first().json.created_at,\n    updated_at: $input.first().json.updated_at,\n    additional_attributes: $input.first().json.additional_attributes,\n    custom_attributes: $input.first().json.custom_attributes,\n    last_activity_at: $input.first().json.last_activity_at,\n    last_activity_at: $input.first().json.last_activity_at,    \n  }\n}];"
      },
      "id": "dcad4d87-ca2e-4627-8471-6544d0034da4",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -2420,
        1660
      ],
      "alwaysOutputData": true,
      "retryOnFail": true,
      "executeOnce": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT * FROM contacts WHERE account_id = '{{$json[\"extra\"][\"account\"]}}' AND ( identifier = '{{$json[\"chat\"][\"id\"]}}' OR phone_number = '{{$json[\"chat\"][\"phone\"]}}' )",
        "additionalFields": {}
      },
      "id": "19288873-381c-43f8-8c6e-eef5e30d84bd",
      "name": "Get Contact Data",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -2580,
        1660
      ],
      "retryOnFail": true,
      "waitBetweenTries": 2000,
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres SocialAtendimento"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT \n display_id, \n status\nFROM conversations \nWHERE \n\taccount_id = '{{ $json.account }}' \n\tAND inbox_id = '{{ $json.inbox }}'\n\tAND contact_id = '{{ $json.contactid }}'\nORDER BY display_id DESC\nLIMIT 1",
        "additionalFields": {}
      },
      "id": "0fe01cba-91b4-4749-83b6-a7b8e75c71a9",
      "name": "Get Last Conversation",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        3760,
        1480
      ],
      "retryOnFail": false,
      "waitBetweenTries": 2000,
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres SocialAtendimento"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const validStatus = [\"open\", \"resolved\", \"pending\", \"snoozed\"];\n\nreturn [{\n  payload: {\n    id: $input.first().json.display_id,\n    status: validStatus[$input.first().json.status]\n  }\n}];"
      },
      "id": "5e4e7a6e-0d58-4290-adc5-e084ca80bfdb",
      "name": "Rename Status to Open|Pend|Snooze",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        3980,
        1480
      ]
    },
    {
      "parameters": {
        "workflowId": "=4"
      },
      "id": "26350891-81ae-4e2a-a036-e154bd9fc618",
      "name": "Throw To Greetings Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        6200,
        760
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "workflowId": "=5"
      },
      "id": "6c9952f2-2fc3-4318-860e-fbeb3b331076",
      "name": "Execute Workflow Post To Chatwoot",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        9180,
        1460
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "workflowId": "=7"
      },
      "id": "52dcc15c-a068-4efe-87a6-a78ded0eccae",
      "name": "Throw To Quepasa Chat Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        9200,
        1240
      ],
      "continueOnFail": true
    }
  ],
  "pinData": {},
  "connections": {
    "Has Participant ?": {
      "main": [
        [
          {
            "node": "GetAndCreate Participant",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Clearing Participant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Participant Contact": {
      "main": [
        [
          {
            "node": "Deliver Participant Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open ?": {
      "main": [
        [
          {
            "node": "Open a Conversation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "NoOp - Opening Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a Conversation": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait For Create a Conversation",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Wait For Create a Conversation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open a Conversation": {
      "main": [
        [
          {
            "node": "Set Updated Conversation Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Not Broadcast ?": {
      "main": [
        [
          {
            "node": "Clearing Payload For Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Broadcast Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetAndCreate Participant": {
      "main": [
        [
          {
            "node": "If Get Participant Sucess ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Create a New Conversation Thread ?": {
      "main": [
        [
          {
            "node": "Wait For Create a Conversation1",
            "type": "main",
            "index": 1
          },
          {
            "node": "NoOp - Opening Conversation1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Open ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Send Greetings ?": {
      "main": [
        [
          {
            "node": "Wait For Create a Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Create a Conversation": {
      "main": [
        [
          {
            "node": "Throw To Greetings Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Filter Conversation Parameters": {
      "main": [
        [
          {
            "node": "Set Increment For Conversations Attempts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow To Chat Contact Create": {
      "main": [
        [
          {
            "node": "If Chat Contact Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Chat Contact": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clearing Participant": {
      "main": [
        [
          {
            "node": "Deliver Participant Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clearing Payload For Contacts": {
      "main": [
        [
          {
            "node": "Cover Ids & Set Phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cover Ids & Set Phone": {
      "main": [
        [
          {
            "node": "Set Increment For Chat Contact Attempt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Participant Payload": {
      "main": [
        [
          {
            "node": "Has Participant ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clearing Payload For Workflow": {
      "main": [
        [
          {
            "node": "Clearing Payload For Contacts",
            "type": "main",
            "index": 0
          },
          {
            "node": "Parameters + Contacts1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Get Participant Sucess ?": {
      "main": [
        [
          {
            "node": "Set Participant Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Chat Contact Exists": {
      "main": [
        [
          {
            "node": "Set SourceId and PayloadId",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Chat Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parameters + Contacts1": {
      "main": [
        [
          {
            "node": "If Chat Exists ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Group ?": {
      "main": [
        [
          {
            "node": "Set Participant Payload",
            "type": "main",
            "index": 0
          },
          {
            "node": "Parameters + Contacts",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "new payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deliver Participant Contact Payload": {
      "main": [
        [
          {
            "node": "Parameters + Contacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parameters + Contacts": {
      "main": [
        [
          {
            "node": "new payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new payload": {
      "main": [
        [
          {
            "node": "Set Filter Conversation Parameters",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Should Create a New Conversation Thread ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp - Opening Conversation1": {
      "main": [
        [
          {
            "node": "Should Send Greetings ?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create a Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Create a Conversation1": {
      "main": [
        [
          {
            "node": "Open ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp - Opening Conversation": {
      "main": [
        [
          {
            "node": "If Call Request ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "NoOp - Opening Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chatwoot Message Payload": {
      "main": [
        [
          {
            "node": "Payload Constants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Updated Conversation Status": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload Constants": {
      "main": [
        [
          {
            "node": "If Invite Command1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Call Request ?": {
      "main": [
        [
          {
            "node": "Set Text Content For Call Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chatwoot Message Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Text Content For Call Request": {
      "main": [
        [
          {
            "node": "Chatwoot Message Payload",
            "type": "main",
            "index": 0
          },
          {
            "node": "Throw To WebCallBack Telephony Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deliver Chat Contact Payload": {
      "main": [
        [
          {
            "node": "Parameters + Contacts1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If Chat Exists ?": {
      "main": [
        [
          {
            "node": "If Group ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop And Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Set Created Chat Contact Info",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Error 422 And Has Attempts Remaning ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set SourceId and PayloadId": {
      "main": [
        [
          {
            "node": "Deliver Chat Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Created Chat Contact Info": {
      "main": [
        [
          {
            "node": "Deliver Chat Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait a while (5s)": {
      "main": [
        [
          {
            "node": "Retry To Chat Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Increment For Conversations Attempts": {
      "main": [
        [
          {
            "node": "Get Last Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Conversation Payload": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set Increment For Chat Contact Attempt": {
      "main": [
        [
          {
            "node": "Follow To Chat Contact Create",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Contact Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Wait a while (5s)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Error 422 And Has Attempts Remaning ?": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "! Unknown Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retry To Chat Contact": {
      "main": [
        [
          {
            "node": "Set Increment For Chat Contact Attempt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Not Broadcast ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Chatwoot1": {
      "main": [
        [
          {
            "node": "Not Broadcast ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Invite Command1": {
      "main": [
        [
          {
            "node": "Throw To Quepasa Chat Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow Post To Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Called By Another Workflow": {
      "main": [
        [
          {
            "node": "Not Broadcast ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Follow To Chat Contact Create",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get Contact Data": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Last Conversation": {
      "main": [
        [
          {
            "node": "Rename Status to Open|Pend|Snooze",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rename Status to Open|Pend|Snooze": {
      "main": [
        [
          {
            "node": "Set Conversation Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "c646cb41-5883-4caf-a223-754492b59c68",
  "id": "30",
  "meta": {
    "instanceId": "f02f26887e67df04425977547fa1b8580520c931a164aac95b06be62082bb6f9"
  },
  "tags": [
    {
      "createdAt": "2023-05-06T20:25:45.644Z",
      "updatedAt": "2023-05-06T20:25:45.644Z",
      "id": "3",
      "name": "QUEPASA"
    },
    {
      "createdAt": "2023-05-06T20:26:21.016Z",
      "updatedAt": "2023-05-06T20:26:21.016Z",
      "id": "6",
      "name": "CHATWOOT"
    },
    {
      "name": "Aireset",
      "createdAt": "2023-05-19T23:19:30.317Z",
      "updatedAt": "2023-05-19T23:19:30.317Z",
      "id": "11"
    }
  ]
}